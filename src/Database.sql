-- UC_1 : Ability to create a payroll service database

create database payroll_service;

show databases;

-- OUTPUT
-- h2h_schema
-- information_schema
-- mysql
-- payroll_service
-- performance_schema
-- sys

use payroll_service;

-- UC_2 : Ability to create a employee payroll table in the payroll service database to manage employee payrolls

CREATE TABLE EMPLOYEE_PAYROLL_DB (
    EMP_ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255),
    SALARY DECIMAL(10, 2),
    START_DATE DATE
);

DESC EMPLOYEE_PAYROLL_DB;

-- OUTPUT
-- EMP_ID	int	NO	PRI		auto_increment
-- NAME	varchar(255)	YES			
-- SALARY	decimal(10,2)	YES			
-- START_DATA	date	YES			

-- UC_3 : Ability to create employee payroll data in the payroll service database as part of CURD Operation - Use payroll_service database

INSERT INTO EMPLOYEE_PAYROLL_DB(NAME, SALARY, START_DATE)
VALUES
    ('Priyanka', 15000, '2023-02-01'),
    ('Bob', 10000, '2023-09-11'),
    ('John', 20000, '2023-03-10'),
    ('Doe', 5000, '2023-04-07');

-- UC_4 : Ability to retrieve all the employee payroll data that is added to payroll service database

SELECT * FROM EMPLOYEE_PAYROLL_DB;

-- OUTPUT
-- 1	Priyanka	15000.00	2023-02-01
-- 2	Bob	10000.00	2023-09-11
-- 3	John	20000.00	2023-03-10
-- 4	Doe	5000.00	2023-04-07
			
-- UC_5 : Ability to retrieve salary data for a particular employee as well as all employees who have joined in a particular data range 
-- from the payroll service database

SELECT * FROM EMPLOYEE_PAYROLL_DB WHERE NAME = 'Priyanka';

-- OUTPUT
-- 1	Priyanka	15000.00	2023-02-01
			
SELECT * FROM EMPLOYEE_PAYROLL_DB 
WHERE START_DATE BETWEEN CAST('2023-03-15' AS DATE) AND CURDATE()
AND SALARY BETWEEN 10000 AND 20000; 

-- OUTPUT
-- 2	Bob	10000.00	2023-09-11
		
-- UC_6 : Ability to add Gender to Employe Payroll Table and Update the Rows to reflect the correct Employee Gender

UPDATE EMPLOYEE_PAYROLL_DB
SET GENDER = 'M'
WHERE NAME IN ('Bob', 'John');

DESC EMPLOYEE_PAYROLL_DB;

SELECT * FROM EMPLOYEE_PAYROLL_DB;

-- OUTPUT
-- 1	Priyanka		15000.00	2023-02-01
-- 2	Bob	M	10000.00	2023-09-11
-- 3	John	M	20000.00	2023-03-10
-- 4	Doe		5000.00	2023-04-07

-- UC_7 : Ability to find sum, average, min, max and number of male and female employees

--FINDING THE TOTAL SALARY
SELECT NAME, GENDER, SUM(SALARY) AS TOTAL_SALARY
FROM EMPLOYEE_PAYROLL_DB
GROUP BY NAME, GENDER;

-- OUTPUT
-- Priyanka		15000.00
-- Bob	M	10000.00
-- John	M	20000.00
-- Doe		5000.00

--FINDING THE AVERAGE SALARY
SELECT NAME, GENDER, AVG(SALARY) AS AVERAGE_SALARY
FROM EMPLOYEE_PAYROLL_DB
GROUP BY NAME, GENDER;

-- OUTPUT
-- Priyanka		15000.000000
-- Bob	M	10000.000000
-- John	M	20000.000000
-- Doe		5000.000000

--FINDING THE MINIMUM SALARY
SELECT NAME, GENDER, MIN(SALARY) AS MINIMUM_SALARY
FROM EMPLOYEE_PAYROLL_DB
GROUP BY NAME, GENDER
ORDER BY MINIMUM_SALARY;

-- OUTPUT
-- Doe		5000.00
-- Bob	M	10000.00
-- Priyanka		15000.00
-- John	M	20000.00

--FINDING THE DESC SALARY
SELECT NAME, GENDER, MIN(SALARY) AS MINIMUM_SALARY
FROM EMPLOYEE_PAYROLL_DB
GROUP BY NAME, GENDER
ORDER BY MINIMUM_SALARY DESC;

-- OUTPUT
-- John	M	20000.00
-- Priyanka		15000.00
-- Bob	M	10000.00
-- Doe		5000.00

--COUNTING THE GENDER OF EMPLOYEES
SELECT GENDER, COUNT(*) AS NUMBER_EMPLOYEES
FROM EMPLOYEE_PAYROLL_DB
GROUP BY GENDER;

-- OUTPUT
-- F	2
-- M	2


-- UC_8 

CREATE TABLE EMPLOYEE_DETAILS (
    EMP_ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255),
    SALARY DECIMAL(10, 2),
    START_DATE DATE,
    PHONE VARCHAR(15),
    DEPARTMENT VARCHAR(50) NOT NULL,
    GENDER CHAR(1)
);

INSERT INTO EMPLOYEE_DETAILS (NAME, SALARY, START_DATE, PHONE, DEPARTMENT, GENDER)
VALUES
    ('Priyanka', 15000, '2023-02-01', '1234567890', 'HR', 'F'),
    ('Bob', 10000, '2023-09-11', '9876543210', 'IT', 'M'),
    ('John', 20000, '2023-03-10', '5556667777', 'Finance', 'M'),
    ('Doe', 5000, '2023-04-07', '1112223333', 'Admin', 'F');

SELECT * FROM EMPLOYEE_DETAILS;

-- OUTPUT
-- 1	Priyanka	15000.00	2023-02-01	1234567890	HR	F
-- 2	Bob	10000.00	2023-09-11	9876543210	IT	M
-- 3	John	20000.00	2023-03-10	5556667777	Finance	M
-- 4	Doe	5000.00	2023-04-07	1112223333	Admin	F
						
							
-- UC9

CREATE TABLE EMPLOYEE_PAYROLL_EXTENDED (
    EMP_ID INT AUTO_INCREMENT PRIMARY KEY,
    BASIC_PAY DECIMAL(10, 2),
    DEDUCTIONS DECIMAL(10, 2),
    TAXABLE_PAY DECIMAL(10, 2),
    INCOME_TAX DECIMAL(10, 2),
    NET_PAY DECIMAL(10, 2)
);

INSERT INTO EMPLOYEE_PAYROLL_EXTENDED (BASIC_PAY, DEDUCTIONS, TAXABLE_PAY, INCOME_TAX, NET_PAY)
VALUES
    (50000.00, 5000.00, 45000.00, 9000.00, 36000.00),
    (55000.00, 6000.00, 49000.00, 10000.00, 39000.00),
    (60000.00, 7000.00, 53000.00, 11000.00, 42000.00),
    (65000.00, 8000.00, 58000.00, 12000.00, 44000.00);
    
SELECT * FROM EMPLOYEE_PAYROLL_EXTENDED

-- OUTPUT
-- 1	50000.00	5000.00	45000.00	9000.00	36000.00
-- 2	55000.00	6000.00	49000.00	10000.00	39000.00
-- 3	60000.00	7000.00	53000.00	11000.00	42000.00
-- 4	65000.00	8000.00	58000.00	12000.00	44000.00


-- uc_9 AND ER
ALTER TABLE EMPLOYEE_PAYROLL_DB
ADD COLUMN PHONE VARCHAR(15),
ADD COLUMN ADDRESS VARCHAR(255) DEFAULT 'Not Available',
ADD COLUMN DEPARTMENT VARCHAR(50) NOT NULL,
ADD COLUMN BASIC_PAY DECIMAL(10, 2),
ADD COLUMN DEDUCTIONS DECIMAL(10, 2),
ADD COLUMN TAXABLE_PAY DECIMAL(10, 2),
ADD COLUMN INCOME_TAX DECIMAL(10, 2),
ADD COLUMN NET_PAY DECIMAL(10, 2);

ALTER TABLE EMPLOYEE_PAYROLL_DB
DROP COLUMN ADDRESS;

DESC EMPLOYEE_PAYROLL_DB;

SET SQL_SAFE_UPDATES = 0;
UPDATE EMPLOYEE_PAYROLL_DB
SET DEPARTMENT = 'Sales and Marketing'
WHERE NAME = 'Terissa';

SELECT * FROM EMPLOYEE_PAYROLL_DB;

UPDATE EMPLOYEE_PAYROLL_DB ep
JOIN EMPLOYEE_DETAILS ed ON ep.EMP_ID = ed.EMP_ID
JOIN EMPLOYEE_PAYROLL_EXTENDED epe ON ep.EMP_ID = epe.EMP_ID
SET
    ep.PHONE = COALESCE(ep.PHONE, ed.PHONE),  
    ep.DEPARTMENT = COALESCE(ep.DEPARTMENT, ed.DEPARTMENT),  
    ep.BASIC_PAY = COALESCE(ep.BASIC_PAY, epe.BASIC_PAY), 
    ep.DEDUCTIONS = COALESCE(ep.DEDUCTIONS, epe.DEDUCTIONS),  
    ep.TAXABLE_PAY = COALESCE(ep.TAXABLE_PAY, epe.TAXABLE_PAY), 
    ep.INCOME_TAX = COALESCE(ep.INCOME_TAX, epe.INCOME_TAX),  
    ep.NET_PAY = COALESCE(ep.NET_PAY, epe.NET_PAY)  
WHERE
    ep.PHONE IS NULL OR
    ep.BASIC_PAY IS NULL OR
    ep.DEDUCTIONS IS NULL OR
    ep.TAXABLE_PAY IS NULL OR
    ep.INCOME_TAX IS NULL OR
    ep.NET_PAY IS NULL;

SELECT * FROM EMPLOYEE_PAYROLL_DB;

INSERT INTO EMPLOYEE_PAYROLL_DB (NAME, SALARY, START_DATE, PHONE, DEPARTMENT, BASIC_PAY, DEDUCTIONS, TAXABLE_PAY, INCOME_TAX, NET_PAY)
VALUES ('Terissa', 15000, '2023-01-01', '1234567890', 'Sales and Marketing', 12000, 2000, 10000, 2000, 8000);

-- OUTPUT
-- 1	Priyanka	F	15000.00	2023-02-01	1234567890		50000.00	5000.00	45000.00	9000.00	36000.00
-- 2	Bob	M	10000.00	2023-09-11	9876543210		55000.00	6000.00	49000.00	10000.00	39000.00
-- 3	John	M	20000.00	2023-03-10	5556667777		60000.00	7000.00	53000.00	11000.00	42000.00
-- 4	Doe	F	5000.00	2023-04-07	1112223333		65000.00	8000.00	58000.00	12000.00	44000.00
-- 5	Terissa		15000.00	2023-01-01	1234567890	Sales and Marketing	12000.00	2000.00	10000.00	2000.00	8000.00
											
SELECT * FROM EMPLOYEE_PAYROLL_DB
WHERE EMP_ID=
(SELECT EMP_ID FROM EMPLOYEE_DETAILS WHERE NAME="Priyanka");

-- OUTPUT
-- 1	Priyanka	F	15000.00	2023-02-01	1234567890		50000.00	5000.00	45000.00	9000.00	36000.00
											

ALTER TABLE COMBINED_EMPLOYEEPAYROLL ADD COLUMN DEPT_ID INT;

CREATE TABLE DEPARTMENT_DETAILS (
    DEPT_ID INT PRIMARY KEY AUTO_INCREMENT,
    DEPARTMENT VARCHAR(255) NOT NULL
);

CREATE TABLE EMP_DEPT (
    EMP_ID INT,
    DEPT_ID INT,
    PRIMARY KEY (EMP_ID, DEPT_ID),
    FOREIGN KEY (EMP_ID) REFERENCES COMBINED_EMPLOYEEPAYROLL(employee_id),
    FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT_DETAILS(DEPT_ID)
);
SET SQL_SAFE_UPDATES = 0;

UPDATE COMBINED_EMPLOYEEPAYROLL cep
JOIN DEPARTMENT_DETAILS d ON cep.DEPARTMENT = d.DEPARTMENT
SET cep.DEPT_ID = d.DEPT_ID;

SELECT * FROM COMBINED_EMPLOYEEPAYROLL

-- OUTPUT
-- 1	Priyanka	F	15000.00	2023-02-01	1234567890	HR	50000.00	5000.00	45000.00	9000.00	36000.00	
-- 2	Bob	M	10000.00	2023-09-11	9876543210	IT	55000.00	6000.00	49000.00	10000.00	39000.00	
-- 3	John	M	20000.00	2023-03-10	5556667777	Finance	60000.00	7000.00	53000.00	11000.00	42000.00	
-- 4	Doe	F	5000.00	2023-04-07	1112223333	Admin	65000.00	8000.00	58000.00	12000.00	44000.00	
-- 0	Amit	M	50000.00	2023-12-12	1234567890	IT	40000.00	10000.00	40000.00	4000.00	46000.00	
-- 0	Amit	M	50000.00	2023-12-12	1234567890	IT	40000.00	10000.00	40000.00	4000.00	46000.00	